name: Yafl Build and Run Coverage

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        build_type: [Debug]
        c_compiler: [gcc]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install lcov python3
        wget https://github.com/google/googletest/archive/refs/tags/release-1.12.1.tar.gz -O googletest-release-1.12.1.tar.gz && \
        tar zxf googletest-release-1.12.1.tar.gz && \
        cd googletest-release-1.12.1 && \
        mkdir build && \
        cd build && \
        cmake .. && \
        make -j7 && sudo make install && \
        cd ../.. && rm googletest* -rf

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DBUILD_YAFL_COVERAGE=ON
        -DBUILD_YAFL_TESTS=ON
        -DBUILD_YAFL_EXAMPLE=OFF
        -DBUILD_YAFL_DOCS=OFF
        -DCMAKE_CXX_STANDARD=17
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Coverage
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --target coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
